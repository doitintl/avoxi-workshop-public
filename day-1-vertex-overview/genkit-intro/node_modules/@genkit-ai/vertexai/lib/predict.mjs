import {
  __async
} from "./chunk-WFI2LP4G.mjs";
import { GENKIT_CLIENT_HEADER } from "@genkit-ai/core";
function endpoint(options) {
  return `https://${options.location}-aiplatform.googleapis.com/v1/projects/${options.projectId}/locations/${options.location}/publishers/google/models/${options.model}:predict`;
}
function predictModel(auth, { location, projectId }, model) {
  return (instances, parameters) => __async(this, null, function* () {
    const fetch = (yield import("node-fetch")).default;
    const accessToken = yield auth.getAccessToken();
    const req = {
      instances,
      parameters: parameters || {}
    };
    const response = yield fetch(
      endpoint({
        projectId,
        location,
        model
      }),
      {
        method: "POST",
        body: JSON.stringify(req),
        headers: {
          Authorization: `Bearer ${accessToken}`,
          "Content-Type": "application/json",
          "X-Goog-Api-Client": GENKIT_CLIENT_HEADER
        }
      }
    );
    if (!response.ok) {
      throw new Error(
        `Error from Vertex AI predict: HTTP ${response.status}: ${yield response.text()}`
      );
    }
    return yield response.json();
  });
}
export {
  predictModel
};
//# sourceMappingURL=predict.mjs.map