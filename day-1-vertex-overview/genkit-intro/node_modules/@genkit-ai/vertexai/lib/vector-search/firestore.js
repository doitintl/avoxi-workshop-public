"use strict";
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};
var firestore_exports = {};
__export(firestore_exports, {
  getFirestoreDocumentIndexer: () => getFirestoreDocumentIndexer,
  getFirestoreDocumentRetriever: () => getFirestoreDocumentRetriever
});
module.exports = __toCommonJS(firestore_exports);
var import_retriever = require("@genkit-ai/ai/retriever");
const getFirestoreDocumentRetriever = (db, collectionName) => {
  const firestoreRetriever = (neighbors) => __async(void 0, null, function* () {
    var _a;
    const docs = [];
    for (const neighbor of neighbors) {
      const docRef = db.collection(collectionName).doc((_a = neighbor.datapoint) == null ? void 0 : _a.datapointId);
      const docSnapshot = yield docRef.get();
      if (docSnapshot.exists) {
        const docData = __spreadProps(__spreadValues({}, docSnapshot.data()), { metadata: __spreadValues({}, neighbor) });
        const parsedDocData = import_retriever.DocumentDataSchema.safeParse(docData);
        if (parsedDocData.success) {
          docs.push(new import_retriever.Document(parsedDocData.data));
        }
      }
    }
    return docs;
  });
  return firestoreRetriever;
};
const getFirestoreDocumentIndexer = (db, collectionName) => {
  const firestoreIndexer = (docs) => __async(void 0, null, function* () {
    const batch = db.batch();
    const ids = [];
    docs.forEach((doc) => {
      const docRef = db.collection(collectionName).doc();
      batch.set(docRef, {
        content: doc.content,
        metadata: doc.metadata || null
      });
      ids.push(docRef.id);
    });
    yield batch.commit();
    return ids;
  });
  return firestoreIndexer;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getFirestoreDocumentIndexer,
  getFirestoreDocumentRetriever
});
//# sourceMappingURL=firestore.js.map